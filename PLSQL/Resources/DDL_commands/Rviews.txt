--Following views are for the first layer of request to view each of the resources

--VIEWS FOR PUBLICATIONS

CREATE OR REPLACE VIEW athoma12.PUB_VIEW AS
SELECT rtype_id, title
FROM athoma12.publications;

--VIEWS FOR CAMERAS

CREATE OR REPLACE VIEW athoma12.CAM_VIEW AS
SELECT rtype_id, model
FROM athoma12.cameras;

CREATE OR REPLACE VIEW athoma12.CAM_VIEW2 AS
SELECT rtype_id, model, memory, lens_config, make
FROM athoma12.cameras;
--WHERE rtypeid = usr_selection;


--------------------------------------------------------------------------------------
--VIEW FOR WAITLIST DISPLAY OF A USER
create or replace view athoma12.user_waitlist_summary as 
SELECT RT.type, P.title AS DESCRIPTION, NULL AS LIBRARY, W.patron_id
FROM athoma12.Publications P, athoma12.Resource_types RT, athoma12.waitlist W
WHERE W.rtype_id = P.rtype_id AND W.rtype_id = RT.rtype_id
UNION
SELECT RT.type, C.make||' '||C.model AS DESCRIPTION, NULL AS LIBRARY, W.patron_id
FROM athoma12.cameras C, athoma12.Resource_types RT, athoma12.waitlist W
WHERE W.rtype_id = C.rtype_id AND W.rtype_id = RT.rtype_id
UNION
SELECT RT.type, RO.room_id||' '||RO.position AS DESCRIPTION, L.lib_name AS LIBRARY, W.patron_id
FROM athoma12.rooms RO, athoma12.Resource_types RT, athoma12.waitlist W, athoma12.library L, athoma12.Resources R
WHERE W.rtype_id = RO.rtype_id AND W.rtype_id = RT.rtype_id AND RT.rtype_id = R.rtype_id AND R.lib_id = L.lib_id;



--VIEW FOR DISPLAYING DETAILS OF PUBLICATIONS AND R_ACTION POSSIBLE
--Following view is wrong, dont use yet
CREATE OR REPLACE VIEW athoma12.PUB_CHECKOUT_VIEW AS
SELECT P.title, B.ISBN, B.edition, B.publishers, P.year, athoma12.RFuncCheckout.pubCheckoutFunc1(P.rtype_id,PT.patron_id) AS r_action, P.rtype_id, PT.patron_id
FROM athoma12.publications P, athoma12.Books B, athoma12.Patrons PT
WHERE P.rtype_id = B.rtype_id
UNION
SELECT P.title, J.ISSN, -999, 'JUNK', P.year, athoma12.RFuncCheckout.pubCheckoutFunc1(P.rtype_id,PT.patron_id) AS r_action, P.rtype_id, PT.patron_id
FROM athoma12.publications P, athoma12.Journals J, athoma12.Patrons PT
WHERE P.rtype_id = J.rtype_id
UNION
SELECT P.title, C.conf_no, -999, 'JUNK', P.year, athoma12.RFuncCheckout.pubCheckoutFunc1(P.rtype_id,PT.patron_id) AS r_action, P.rtype_id, PT.patron_id
FROM athoma12.publications P, athoma12.Conf_Proceedings C, athoma12.Patrons PT
WHERE P.rtype_id = C.rtype_id;

/*
--Query to run
select * from athoma12.PUB_CHECKOUT_VIEW where patron_id = usr_patron_id AND rtype_id = r_rtype_id;
*/
--------------------------------------------------------------------------------------
--QUERY TO DISPLAY DETAILS OF ROOMS GIVEN

--This query needs 5 variables as inputs:
--r_capacity NUMBER
--r_roomtype VARCHAR2
--r_lib_id NUMBER
--r_time_in TIMESTAMP
--r_time_out TIMESTAMP

--This query displays the list of rooms at given inputs as listed above
--In case the rooms are not available at the given capacity it will
--automatically list all the rooms at higher capacities at the given library

--I believe a view cannot be created for this query
/*
  SELECT RO.room_id, RO.position
 FROM athoma12.rooms RO, athoma12.library L, athoma12.Resources R
 WHERE RO.rtype_id = R.rtype_id AND R.lib_id = L.lib_id
        AND RO.capacity = r_capacity AND RO.roomtype = r_roomtype AND L.lib_id = r_lib_id
        AND NOT EXISTS (SELECT reservation_start , reservation_end FROM athoma12.waitlist
                        WHERE (reservation_start BETWEEN r_time_in AND r_time_out)
                        AND (reservation_end BETWEEN r_time_in AND r_time_out))
UNION
  SELECT RO.room_id, RO.position
 FROM athoma12.rooms RO, athoma12.library L, athoma12.Resources R
 WHERE RO.rtype_id = R.rtype_id AND R.lib_id = L.lib_id
        AND RO.capacity >= r_capacity AND RO.roomtype = r_roomtype AND L.lib_id = r_lib_id
        AND NOT EXISTS (SELECT reservation_start , reservation_end FROM athoma12.waitlist
                        WHERE (reservation_start BETWEEN r_time_in AND r_time_out)
                        AND (reservation_end BETWEEN r_time_in AND r_time_out))
		AND NOT EXISTS (  SELECT RO.room_id, RO.position
 		FROM athoma12.rooms RO, athoma12.library L, athoma12.Resources R
 		WHERE RO.rtype_id = R.rtype_id AND R.lib_id = L.lib_id
        AND RO.capacity = r_capacity AND RO.roomtype = r_roomtype AND L.lib_id = r_lib_id
        AND NOT EXISTS (SELECT reservation_start , reservation_end FROM athoma12.waitlist
                        WHERE (reservation_start BETWEEN r_time_in AND r_time_out)
                        AND (reservation_end BETWEEN r_time_in AND r_time_out)));
 */
--------------------------------------------------------------------------------------
--VIEW FOR LIST OF ALL CAMERAS

--To list all avilable cameras

CREATE OR REPLACE VIEW athoma12.CAM_CHECKOUT_VIEW AS
SELECT R.rid, R.rtype_id, C.make||' '||C.model AS DESCRIPTION, lens_config, memory, L.lib_name
FROM athoma12.cameras C, athoma12.Resources R, athoma12.library L
WHERE R.rtype_id = C.rtype_id AND R.lib_id = L.lib_id;

--Query to be used for displaying the list of all available cameras
--select * from athoma12.CAM_CHECKOUT_VIEW;

--Query to be used for displaying the details of a camera given
--its UNIQUE_CAMERA_ID which is an alias of rid 
--select * from athoma12.CAM_CHECKOUT_VIEW WHERE UNIQUE_CAMERA_ID = usr_entered_id ;

--------------------------------------------------------------------------------------
--View to check resources checked out by user
create or replace view athoma12.user_checkout_summary as 
select B.borrow_id, B.patron_id, B.checkout_time, B.due_time, B.return_time, RT.type, L.LIB_NAME, L.lib_id, R.rid, RT.rtype_id, P.title AS DESCRIPTION, 'H' as E_OR_H
 from athoma12.borrows B, athoma12.resources R, athoma12.resource_types RT, athoma12.library L, athoma12.publications P
 where B.rid = R.rid
 and R.rtype_id = RT.rtype_id
 and L.lib_id = R.lib_id
 --and systimestamp > B.checkout_time
 and B.return_time is null
 and P.rtype_id = RT.rtype_id
 UNION
 select B.borrow_id, B.patron_id, B.checkout_time, B.due_time, B.return_time, RT.type, L.LIB_NAME, L.lib_id, R.rid, RT.rtype_id, RO.room_id, null
 from athoma12.borrows B, athoma12.resources R, athoma12.resource_types RT, athoma12.library L, athoma12.rooms RO
 where B.rid = R.rid
 and R.rtype_id = RT.rtype_id
 and L.lib_id = R.lib_id
 --and systimestamp > B.checkout_time
 and B.return_time is null
 and RO.rtype_id = RT.rtype_id
 UNION
  select B.borrow_id, B.patron_id, B.checkout_time, B.due_time, B.return_time, RT.type, L.LIB_NAME, L.lib_id, R.rid, RT.rtype_id, C.make||' '||C.model, null
 from athoma12.borrows B, athoma12.resources R, athoma12.resource_types RT, athoma12.library L, athoma12.cameras C
 where B.rid = R.rid
 and R.rtype_id = RT.rtype_id
 and L.lib_id = R.lib_id
 --and systimestamp > B.checkout_time
 and B.return_time is null
 and C.rtype_id = RT.rtype_id
 UNION
  select E.borrow_id, E.patron_id, E.checkout_time, E.due_time, E.return_time, RT.type, L.LIB_NAME, L.lib_id, null, RT.rtype_id, P.title, 'E'
 from athoma12.eborrows E, athoma12.epublications EP, athoma12.resource_types RT, athoma12.library L, athoma12.publications P
 where E.rtype_id = RT.rtype_id
 and EP.rtype_id = RT.rtype_id
 and L.lib_id = EP.lib_id
 and E.return_time is null
 and P.rtype_id = RT.rtype_id  
 ;


 create or replace view athoma12.book_rid_details as
 select B.rtype_id, B.ISBN, B.edition, B.reserved, B.publishers, P.year, P.title, R.rid, R.status, L.lib_name, L.lib_id, RT.type
 from athoma12.books B, athoma12.publications P, athoma12.resources R, athoma12.resource_types RT, athoma12.library L
 where B.rtype_id = P.rtype_id
 and R.rtype_id = RT.rtype_id
 and RT.rtype_id = P.rtype_id
 and l.lib_id = R.lib_id;

 create or replace view athoma12.journal_rid_details as
 select J.rtype_id, J.ISSN, P.year, P.title, R.rid, R.status, L.lib_name, L.lib_id, RT.type
 from athoma12.journals J, athoma12.publications P, athoma12.resources R, athoma12.resource_types RT, athoma12.library L
 where J.rtype_id = P.rtype_id
 and R.rtype_id = RT.rtype_id
 and RT.rtype_id = P.rtype_id
 and l.lib_id = R.lib_id;	

 create or replace view athoma12.conf_proc_rid_details as
 select C.rtype_id, C.conf_no, C.conf_name, P.year, P.title, R.rid, R.status, L.lib_name, L.lib_id, RT.type
 from athoma12.conf_proceedings C, athoma12.publications P, athoma12.resources R, athoma12.resource_types RT, athoma12.library L
 where C.rtype_id = P.rtype_id
 and R.rtype_id = RT.rtype_id
 and RT.rtype_id = P.rtype_id
 and l.lib_id = R.lib_id;	

 create or replace view athoma12.rooms_rid_details as
 select RO.rtype_id, RO.room_id, RO.position, RO.capacity, RO.roomtype, R.rid, R.status, L.lib_name, L.lib_id, RT.type
 from athoma12.rooms RO, athoma12.resources R, athoma12.resource_types RT, athoma12.library L
 where RO.rtype_id = RT.rtype_id
 and R.rtype_id = RT.rtype_id
 and l.lib_id = R.lib_id;	

 create or replace view athoma12.cam_rid_details as
 select C.rtype_id, C.cam_id, C.model, C.memory, C.lens_config, C.make, R.rid, R.status, L.lib_name, L.lib_id, RT.type
 from athoma12.cameras C, athoma12.resources R, athoma12.resource_types RT, athoma12.library L
 where C.rtype_id = RT.rtype_id
 and R.rtype_id = RT.rtype_id
 and l.lib_id = R.lib_id;
